# Loading libraries
library(dplyr)
library(ggplot2)
library(lubridate)
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Filtering out NAs
activity<-activity %>% filter(!is.na(steps))
daily_activity<-activity %>% group_by(date) %>% summarise(mean_steps=mean(steps))
boxplot(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
hist(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(activity$steps,na.rm = T))
plot(daily_activity,type="l")
# This has been done in a earlier step
#activity<-activity %>% filter(!is.na(steps))
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$mean_steps)
abline(h=mean(daily_activity$mean_steps),col="red")
# Loading libraries
library(dplyr)
library(ggplot2)
library(lubridate)
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Filtering out NAs
activity<-activity %>% filter(!is.na(steps))
daily_activity<-activity %>% group_by(date) %>% summarise(mean_steps=mean(steps))
boxplot(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
hist(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(activity$steps,na.rm = T))
plot(daily_activity,type="l")
# This has been done in a earlier step
#activity<-activity %>% filter(!is.na(steps))
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$mean_steps)
abline(h=mean(daily_activity$mean_steps),col="red")
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Filtering out NAs
activity<-activity %>% filter(!is.na(steps))
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Filtering out NAs
activity<-activity %>% filter(!is.na(steps))
View(activity)
which(is.na(activity$steps))
which(is.na(activity$steps))
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
which(is.na(activity$steps))
activity$steps[which(is.na(activity$steps))]
activity$steps[which(is.na(activity$steps))]
median(activity$steps,na.rm = T)
mean(activity$steps,na.rm = T)
mode(activity$steps,na.rm = T)
mode(activity$steps)
knn()
median(activity$steps,na.rm = T)
mean(activity$steps,na.rm = T)
activity$steps[which(is.na(activity$steps))]
activity$steps[which(is.na(activity$steps))]<-mean(activity$steps,na.rm = T)
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Replacing the NAs with mean.(did not find any outliers)
activity$steps[which(is.na(activity$steps))]<-mean(activity$steps,na.rm = T)
"Median of daily total steps is " %>% paste( median(activity$steps,na.rm = T))
activity$date <-ymd(activity$date)
View(activity)
View(daily_activity)
median(daily_activity$mean_steps)
"Mean of daily total steps is " %>% paste( mean(daily_activity$steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$mean_steps,na.rm = T))
daily_activity<-activity %>% group_by(date) %>% summarise(mean_steps=mean(steps))
boxplot(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
hist(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$mean_steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$mean_steps,na.rm = T))
daily_activity<-activity %>% group_by(date) %>% summarise(mean_steps=sum(steps))
boxplot(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
hist(daily_activity$mean_steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$mean_steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$mean_steps,na.rm = T))
View(daily_activity)
boxplot(daily_activity$steps,xlab = "Total number of steps taken per day")
daily_activity<-activity %>% group_by(date) %>% summarise(steps=sum(steps))
boxplot(daily_activity$steps,xlab = "Total number of steps taken per day")
hist(daily_activity$steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$mean_steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$steps,na.rm = T))
median(daily_activity$steps)
mean(daily_activity$steps)
View(daily_activity)
median(activity$steps,na.rm = T)
mean(daily_activity$steps)
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
is.na(activity$steps)
activity$steps[which(is.na(activity$steps))]
table(activity$steps[which(is.na(activity$steps))])
summary(activity$steps[which(is.na(activity$steps))])
summary(activity$date[which(is.na(activity$steps))])
table(activity$date[which(is.na(activity$steps))])
library(kableExtra)
mean(activity$steps)
mean(activity$steps,na.rm=T)
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
mean(activity$steps,na.rm=T)
median(activity$steps,na.rm=T)
activity$steps[which(is.na(activity$steps))]<-mean(activity$steps,na.rm = T)
daily_activity<-activity %>% group_by(date) %>% summarise(steps=sum(steps))
boxplot(daily_activity$steps,xlab = "Total number of steps taken per day")
hist(daily_activity$steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$steps,na.rm = T))
??knn
activity$steps[which(is.na(activity$steps))]
activity$date[which(is.na(activity$steps))]
activity$date
count(activity$date[which(is.na(activity$steps))])
count(activity$date-)
count(activity$date)
activity %>% filter(is.na(steps))
activity %>% filter(is.na(activity$steps))
activity %>% filter(is.na(steps))
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
activity %>% filter(is.na(steps))
activity
nrows(activity)
dplyr::row_number(activity)
nrow(activity)
nrow(activity %>% filter(is.na(steps)))
nrow(activity %>% filter(is.na(steps)))/nrow(activity)
View(activity %>% filter(is.na(steps)))
kableExtra::kable(activity$steps[which(is.na(activity$steps))])
median(activity$steps[which(is.na(activity$steps))])
median(activity$steps[which(!is.na(activity$steps))])
# Loading libraries
library(dplyr)
library(ggplot2)
library(lubridate)
library(kableExtra)
setwd("~\\GitHub\\RepData_PeerAssessment1")
if(!exists("data.zip")){
download.file("https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip","data.zip")
unzip("data.zip")
}
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
# Converting date to correct format
activity$date <-ymd(activity$date)
# Replacing the NAs with mean.(did not find any outliers)
activity$steps[which(is.na(activity$steps))]<-median(activity$steps,na.rm = T)
daily_activity<-activity %>% group_by(date) %>% summarise(steps=sum(steps))
boxplot(daily_activity$steps,xlab = "Total number of steps taken per day")
hist(daily_activity$steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$steps,na.rm = T))
plot(daily_activity,type="l")
# This has been done in a earlier step
#activity<-activity %>% filter(!is.na(steps))
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$mean_steps)
abline(h=mean(daily_activity$mean_steps),col="red")
daily_activity<-activity %>% group_by(date) %>% summarise(steps=sum(steps))
boxplot(daily_activity$steps,xlab = "Total number of steps taken per day")
hist(daily_activity$steps,xlab = "Total number of steps taken per day")
"Mean of daily total steps is " %>% paste( mean(daily_activity$steps,na.rm = T))
"Median of daily total steps is " %>% paste( median(daily_activity$steps,na.rm = T))
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$mean_steps)
abline(h=mean(daily_activity$mean_steps),col="red")
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
kable(daily_activity)
kable_as_image(daily_activity,caption = "")
kable_as_image(daily_activity)
kable(daily_activity) %>% kable_styling()
kable(daily_activity,table.attr = "class='dtable'", escape=F) %>% kable_styling()
kable(daily_activity,table.attr = "class='dtable'", escape=F,results='asis') %>% kable_styling()
kable(head(daily_activity)) %>% kable_styling()
head(daily_activity)
plot(daily_activity,type="l")
plot(x=daily_activity$date,y=daily_activity$steps,type="l")
activity %>% top_n(1,steps)
activity %>% top_n(1,wt=steps)
View(activity)
kable(activity %>% top_n(1,wt=steps))
## Imputing missing values
```{r eval=T,echo=T,warning=F,message=F}
activity %>% top_n(1,wt=steps)
plot(weekdays(daily_activity$date) %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
which(wd(daily_activity$date)==1)
which(weekdays(daily_activity$date)==1)
weekdays(daily_activity$date)
weekdays(daily_activity$date)==c("Sunday")
weekdays(daily_activity$date)==c("Sunday","Monday")
weekdays(daily_activity$date)=="Sunday"|weekdays(daily_activity$date)=="Saturday"
weekdays(daily_activity$date)
weekdays(daily_activity$date,abbreviate = T)
weekdays(daily_activity$date,abbreviate = T)
weekdays(daily_activity$date)
daily_activity %>% mutate(wd=if(weekdays(date)="Sunday","Weekend","Weekday"))
daily_activity %>% mutate(wd=if(weekdays(date)=="Sunday","Weekend","Weekday"))
?if
?if()
daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday","Weekend","Weekday"))
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday","Weekend","Weekday"))
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekend","Weekday"))
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekend","Weekday"))
View(daily_activity)
plot(daily_activity$wd,daily_activity$steps)
plot(x=daily_activity$wd,y=daily_activity$steps)
daily_activity
plot(daily_activity$wd,daily_activity$steps)
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays"))
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
# Marking weekdays and weekends
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays"))
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
# Marking weekdays and weekends
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays"))
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
plot(daily_activity %>% filter(wd="Weekdays") %>% as.factor(),daily_activity$steps)
plot(daily_activity %>% filter(wd=="Weekdays") %>% as.factor(),daily_activity$steps)
plot(daily_activity %>% filter(wd=="Weekdays") %>% as.factor())
plot(daily_activity %>% filter(wd=="Weekdays"))
plot(daily_activity %>% filter(wd=="Weekdays"),type="l")
weekday_activity<-daily_activity %>% filter(wd="Weekdays")
weekday_activity<-daily_activity %>% filter(wd=="Weekdays")
weekend_activity<-daily_activity %>% filter(wd=="Weekends")
par(mfrow=c(2,2))
plot(weekday_activity)
plot(weekend_activity)
plot(weekday_activity$date %>% as.factor(),weekend_activity$steps)
plot(weekday_activity$date %>% as.factor(),weekday_activity$steps)
plot(weekday_activity$date %>% as.factor(),weekday_activity$steps,type="l")
plot(weekday_activity$date %>% as.factor(),weekday_activity$steps,type="b")
plot(x=daily_activity$date,y=daily_activity$steps,type="l")
plot(x=daily_activity$date,y=daily_activity$steps,type="l")
plot(x=weekend_activity$date,y=daily_activity$steps,type="l")
plot(x=weekend_activity$date,y=weekend_activity$steps,type="l")
plot(x=weekday_activity$date %>% as.factor(),y=weekday_activity$steps,type="l")
plot(x=weekend_activity$date %>% as.factor(),y=weekend_activity$steps)
plot(x=weekend_activity$date,y=weekend_activity$steps)
plot(x=weekend_activity$date,y=weekend_activity$steps,type="l")
# Marking weekdays and weekends
daily_activity<-daily_activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays"))
weekday_activity<-daily_activity %>% filter(wd=="Weekdays")
weekend_activity<-daily_activity %>% filter(wd=="Weekends")
plot(daily_activity$wd %>% as.factor(),daily_activity$steps)
abline(h=mean(daily_activity$steps),col="red")
par(mfrow=c(2,2))
plot(x=weekday_activity$date,y=weekday_activity$steps,type="l")
plot(x=weekend_activity$date,y=weekend_activity$steps,type="l")
View(daily_activity)
activity$interval
str(activity$interval)
levels(activity$interval)
levels(activity$interval %>% as.factor())
str(levels(activity$interval %>% as.factor()))
activity %>% group_by(interval) %>% summarise(steps=mean(steps)) %>% top_n(1,wt=steps)
daily_activity %>% group_by(interval) %>% summarise(steps=mean(steps)) %>% top_n(1,wt=steps)
activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays")) %>% group_by(interval,wd) %>% summarise(steps=mean(steps))
temp<-activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays")) %>% group_by(interval,wd,date) %>% summarise(steps=mean(steps))
View(temp)
temp.wd<-temp %>% filter(wd=="Weekdays")
temp.we<-temp %>% filter(wd=="Weekends")
View(temp.wd)
plot(x=temp.wd$date,y=temp.wd$steps,type="l",title="Weekdays activity")
plot(x=temp.wd$date,y=temp.wd$steps,type="l")
plot(x=temp.we$date,y=temp.we$steps,type="l")
plot(x=temp.we$date,y=temp.we$steps,type="p")
plot(x=temp.we$date,y=temp.we$steps,type="bar")
plot(x=temp.we$interval,y=temp.we$steps,type="")
plot(x=temp.we$interval,y=temp.we$steps,type="")
plot(x=temp.we$interval,y=temp.we$steps,type="l")
plot(x=temp.we$date,y=temp.we$steps,type="l")
plot(x=temp.we$date,y=temp.we$steps,type="p")
x
barplot(h=temp.we$date,y=temp.we$steps,type="p")
plot(x=temp.we$date,y=temp.we$steps,type="p")
temp<-activity %>% mutate(wd=ifelse(weekdays(date)=="Sunday"|weekdays(date)=="Saturday","Weekends","Weekdays")) %>% group_by(interval,wd,date) %>% summarise(steps=mean(steps))
temp.wd<-temp %>% filter(wd=="Weekdays")
temp.we<-temp %>% filter(wd=="Weekends")
par(mfrow=c(2,2))
plot(x=temp.wd$date,y=temp.wd$steps,type="p")
plot(x=temp.we$date,y=temp.we$steps,type="p")
nrows(activity)
nrow(activity)
nrow(activity %>% filter(is.na(activity$steps)))
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
activity<-read.csv("activity.csv",header = T) %>% as_tibble()
nrow(activity %>% filter(is.na(activity$steps)))
nrow(activity)/nrow(activity %>% filter(is.na(activity$steps)))
nrow(activity)/nrow(activity %>% filter(is.na(activity$steps)))
